services:
  manager:
    image: registry.planta.services/planta/manager:latest
    environment:
      - "planta__server__gui__host=worker"
      - "planta__server__gui__port=21001"
      ## Configure your License here
      # - "planta__server__ppms_license=<your-license-here>"
      ## Configure your database connection here
      # - "planta__server__hibernate__connection__url=jdbc:oracle:thin:@<your-db-hostname>:<your-db-port>/<your-db-service-name>" # Alternatively, use the SID format: jdbc:oracle:thin:@<your-db-hostname>:<your-db-port>:<your-db-sid>
      # - "planta__server__hibernate__connection__username=<your-db-username-here>"
      # - "planta__server__hibernate__connection__password=<your-db-password-here>"
      - "planta__server__webservices__generic_service__enable=true"
      - "planta__server__webservices__generic_service__port=23333"
      - "planta__server__webservices__generic_service__interface=0.0.0.0"
      - "planta__server__secure__enabled=true"
      - "planta__server__secure__servlet__connection=0.0.0.0:8181"
      - "planta__server__global_setting__planta_link_hostname=manager"
      ## Configure your Pulse settings here
      # - "planta__server__global_setting__pulse_api_token=<your-pulse-token-here>"
      # - "planta__server__global_setting__pulse_api_url=http://pulse:8080/"
      # - "planta__server__global_setting__pulse_client_url=https://localhost:8080/"
      # - "planta__server__global_setting__pulse_sync_new_users=1"
      # - "planta__server__api_token__pulse=<your-second-pulse-token-here>"
    depends_on:
      customizing:
        condition: service_completed_successfully
        restart: true
    networks:
      - internal
    ports:
      - "8181:8181"
      - "23333:23333"
    volumes:
      - transfer:/mnt/transfer:ro
      ## Uncomment the following line to use a custom license file
      # - /path/to/license.conf:/planta/config/license.conf

  worker:
    image: registry.planta.services/planta/worker:latest
    restart: unless-stopped
    environment:
      - "SESSION_LINK=manager:54242"
    depends_on:
      manager:
        condition: service_healthy
        restart: true
      customizing:
        condition: service_completed_successfully
        restart: true
    ports:
      - "21001:21001"
    networks:
      - internal
    volumes:
      - transfer:/mnt/transfer:ro

  customizing:
    image: registry.planta.services/planta/customizing:latest
    volumes:
      - transfer:/mnt/transfer:rw

  webclient:
    image: registry.planta.services/planta/webclient:latest
    environment:
      - "ConnectionSettings__Servers__0__Host=worker"
      - "ConnectionSettings__Servers__0__Port=21001"
      - "ConnectionSettings__RoutingWebHook=http://manager:23333/api/webclient/routing"
      - "MessageDumperSettings__Enabled=false"
    depends_on:
      manager:
        condition: service_healthy
      worker:
        condition: service_started
    networks:
      - internal
    ports:
      - "5000:5000"
    volumes:
      - web:/var/planta:rw

  pulse:
    image: registry.planta.services/planta/pulse:latest
    depends_on:
      mongo:
        condition: service_healthy
    volumes:
      - pulse-data:/app/data
    networks:
      - internal
    environment:
      - MONGO_URL=mongodb://mongo:27017/pulse?replicaSet=rs0
      - MONGO_OPLOG_URL=mongodb://mongo:27017/local?replicaSet=rs0
      - ROOT_URL=http://localhost:8080/
      - 'METEOR_SETTINGS={
          "saml": [],
          "public": {
            "backgroundPath": ["/logo_background.svg", ""],
            "enableInAppNotifications": true,
            "forbidUserReg": false,
            "disconnectTimeSec": 600
          },
          "userAuth": {
            "userpw": true,
            "saml": false
          },
          "plantaService": {
            "protocol": "http",
            "host": "manager",
            "port": "23333",
            "apiToken": "<your-second-pulse-token-here>"
          },
          "firstApiUser": {
            "userName": "<your-api-user-name-here>",
            "tokenString": "<your-pulse-token-here>"
          },
          "pulsePlan": "hybrid_premium",
          "debug": "false"
        }'
    ports:
      - "8080:8080"

  mongo:
    image: mongo:4.4.28
    command: ["--replSet", "rs0", "--bind_ip_all", "--port", "27017"]
    healthcheck:
      test: "mongo --eval \"try { var status = rs.status(); status.ok === 0 ? rs.initiate({_id:'rs0',members:[{_id:0,host:'mongo:27017'}]}) : null } catch (err) { print(err); }\""
      interval: 5s
      timeout: 30s
      start_period: 0s
      start_interval: 1s
      retries: 30
    networks:
      - internal
    volumes:
      - mongo-data:/data/db
      - mongo-config:/data/configdb
    ports:
      - 27017:27017

networks:
  internal:
volumes:
  transfer:
  web:
  pulse-data:
  mongo-data:
  mongo-config:
